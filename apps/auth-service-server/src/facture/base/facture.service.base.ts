/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Facture as PrismaFacture } from "@prisma/client";

export class FactureServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.FactureCountArgs, "select">): Promise<number> {
    return this.prisma.facture.count(args);
  }

  async factures(args: Prisma.FactureFindManyArgs): Promise<PrismaFacture[]> {
    return this.prisma.facture.findMany(args);
  }
  async facture(
    args: Prisma.FactureFindUniqueArgs
  ): Promise<PrismaFacture | null> {
    return this.prisma.facture.findUnique(args);
  }
  async createFacture(args: Prisma.FactureCreateArgs): Promise<PrismaFacture> {
    return this.prisma.facture.create(args);
  }
  async updateFacture(args: Prisma.FactureUpdateArgs): Promise<PrismaFacture> {
    return this.prisma.facture.update(args);
  }
  async deleteFacture(args: Prisma.FactureDeleteArgs): Promise<PrismaFacture> {
    return this.prisma.facture.delete(args);
  }
}
